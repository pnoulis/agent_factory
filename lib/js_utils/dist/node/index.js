import c from"node:process";import t from"node:path";import s from"node:url";import m from"node:fs";function d(){return c.cwd()}function $(r){if(!r)return null;let o=s.fileURLToPath(r);return[t.dirname(o),o]}function i(r){return r?r=t.resolve(r):r=d(),function o(e){return e===t.sep?null:p(e)&&e||o(t.dirname(e))}(r)}function p(r){return a(r,"package.json")}function a(r,o){let e=new RegExp(o),n=m.readdirSync(r,{encoding:"utf8"});for(let f of n)if(e.test(f))return`${r}/${f}`;return null}import g from"node:os";import w from"node:path";import*as u from"node:fs";import x from"node:process";function F(r,o){if(r)r=w.resolve(r);else if(r=i(x.cwd()),!r)throw new Error("loadenv() could not locate environment file.");/\/?env[^\/]*$/.test(r)||(r+="/.env");let e;try{e=u.readFileSync(r,{encoding:"utf8",flag:"r"})}catch(n){throw new Error(`loadenv() failed to read: ${r}`,{cause:n})}if(o){for(let[n,f]of l(e))o[n]=f;return o}else return l(e)}function l(r){return r.split(g.EOL).map(o=>o.split("=")).filter(([o,e])=>!!o)}export{a as findFile,i as findNodePkgDir,$ as getModuleDir,d as getProcessDir,p as isNodePkg,F as loadenv};
