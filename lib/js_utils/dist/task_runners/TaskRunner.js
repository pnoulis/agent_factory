var a={debug:(...e)=>{},trace:(...e)=>{}},o=class extends Error{constructor(t,s){super(t,{cause:s}),this.name=this.constructor.name}};var n={};n.Idle=function(t){this.name="idle",this.taskRunner=t,this.getState=()=>this};n.Idle.prototype.run=function(t){return t(()=>this.taskRunner.setState(this.taskRunner.isConnected()?"connected":"pending"))};n.Pending=function(t){this.name="pending",this.taskRunner=t,this.getState=()=>this};n.Pending.prototype.init=function(){this.poll()};n.Pending.prototype.poll=function(){let t=setInterval(()=>{if(this.taskRunner.isConnected())return clearInterval(t),this.taskRunner.setState("connected");this.taskRunner.flush(),this.taskRunner.jobQueue.length===0&&(clearInterval(t),this.taskRunner.setState("idle"))},this.taskRunner.pollFrequency)};n.Pending.prototype.run=function(t){return t()};n.Connected=function(t){this.name="connected",this.taskRunner=t,this.getState=()=>this};n.Connected.prototype.init=function(){this.taskRunner.flush(),this.runJobs()};n.Connected.prototype.runJobs=function(){this.taskRunner.jobQueue.length===0?this.taskRunner.setState("idle"):this.taskRunner.isConnected()?(this.taskRunner.jobQueue.shift().exec(),this.runJobs()):this.taskRunner.setState("pending")};n.Connected.prototype.run=function(t){return t(()=>this.runJobs())};function i(e={}){let t=this.parseConf(e);this.timeout=t.timeout,this.logger=t.logger,this.isConnected=t.isConnected,this.pollFrequency=t.pollFrequency,this.jobQueue=[],this.state=null,this.states={idle:new n.Idle(this),pending:new n.Pending(this),connected:new n.Connected(this)},this.setState("idle")}i.prototype.parseConf=function(t){let s={};return s.logger=t.logger||a,s.timeout=t.timeout||3e4,s.pollFrequency=t.pollFrequency||1e3,s.isConnected=t.isConnected?t.isConnected:()=>!1,s};i.prototype.setState=function(e){let t=`[TRANSITION]:taskRunner ${this.state?.name}`;if(this.state=this.states[e],!this.state)throw new o(`Unrecognized state: ${e}`);"init"in this.state&&this.state.init()};i.prototype.queue=function(e){return this.jobQueue.push(e)};i.prototype.flush=function(){let e=Date.now();this.jobQueue=this.jobQueue.filter(t=>(e>=t.timeout&&t.exec(!0),e<t.timeout))};i.prototype.newJob=function(e,t){return s=>new Promise((h,r)=>{t.cb?this.queue({timeout:Date.now()+(t.timeout||this.timeout),exec:u=>{if(u)e(new Error("task timeout"));else try{e()}catch(c){e(new o("Synchronous error",c))}}}):this.queue({timeout:Date.now()+(t.timeout||this.timeout),exec:u=>{if(u)r(new Error("task timeout"));else try{e().then(h,r)}catch(c){r(new o("Synchronous error",c))}}}),s&&s()})};i.prototype.inState=function(e){return e===this.state.name};i.prototype.run=function(e,t){return typeof e=="function"&&(t=e,e={}),this.state.run(this.newJob(t,e))};export{i as TaskRunner};
